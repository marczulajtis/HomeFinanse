@model HomeFinanse.Areas.Incomes.Models.IncomeViewModel

@{
    ViewBag.Title = "Add income";
}

<div class="h3 margin-top-20">
    Add income
</div>

@if (ViewData["IncomeAdded"] != null)
{
    <div class="alert alert-success">

        @ViewData["IncomeAdded"]
    </div>
}

@Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

@using (Ajax.BeginForm("AddIncome", "Income", new { area = "Incomes" }, new AjaxOptions { UpdateTargetId = "incomesList" }, null))
{
    if (Model != null)
    {
            <div class="box box-primary">
                <form role="form">
                    <div class="box-body">
                        <div class="form-group">
                            <label>Income name</label>
                            @Html.EditorFor(model => model.NewIncome.IncomeName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="form-group">
                            <label>Income value</label>
                            @Html.EditorFor(model => model.NewIncome.Value, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="form-group">
                            <label>Date</label>
                            <div class="input-group date" data-provide="datetimepicker">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.EditorFor(model => model.NewIncome.IncomeDate, new { @class = "form-control date" })
                            </div>
                    </div>
                    <div class="form-group">
                        <label>Period</label>
                            @Html.DropDownListFor(model => model.NewIncome.PeriodID,
                              new SelectList(Model.Periods, "PeriodID", "PeriodName"),
                              new { @class = "form-control", style = "width: 100%;" })
                    </div>
                    <div class="form-group">
                        <label>On Account</label>
                        <div class="icheckbox_flat-green">
                            @Html.CheckBoxFor(model => model.NewIncome.OnAccount, new { htmlAttributes = new { @class = "flat-red" } })
                        </div>
                    </div>

                <input type="submit" value="Add income" class="btn btn-primary btn-block btn-flat" />
            </div>
        </form>
    </div>
    }
}