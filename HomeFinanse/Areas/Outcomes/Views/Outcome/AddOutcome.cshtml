@model HomeFinanse.Areas.Outcomes.Models.OutcomeViewModel

@{
    ViewBag.Title = "Add outcome";
}

@Html.AntiForgeryToken()

    <div class="h3 margin-top-20">
        Add outcome
    </div>

    @if (ViewData["OutcomeAdded"] != null)
    {
        <div class="alert-success alert">

            @ViewData["OutcomeAdded"]
        </div>
    }

    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

    @using (Ajax.BeginForm("AddOutcome", "Outcome", new { area = "Outcomes" }, new AjaxOptions { UpdateTargetId = "outcomesList" }, null))
    {
        if (Model != null)
        {
            if (Model.Categories != null)
            {
                <div class="box box-primary">
                    <form role="form">
                        <div class="box-body">
                            <div class="form-group">
                                <label>Outcome name</label>
                                @Html.EditorFor(model => model.NewOutcome.OutcomeName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="form-group">
                                <label>Outcome Value</label>
                                @Html.EditorFor(model => model.NewOutcome.Value, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="form-group">
                                <label>Date</label>
                                <div class="input-group date" data-provide="datetimepicker">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(model => model.NewOutcome.Date, new { @class = "form-control date" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Category</label>
                                @Html.DropDownListFor(model => model.NewOutcome.CategoryID,
                                new SelectList(Model.Categories, "CategoryID", "CategoryName"),
                                new { @class = "form-control", style = "display: block; height: 34px;" })
                            </div>
                            <div class="form-group">
                                <label>Place</label>
                                @Html.EditorFor(model => model.NewOutcome.Place, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="form-group">
                                @Html.CheckBoxFor(model => model.NewOutcome.Planned, new { htmlAttributes = new { @class = "form-control" } })
                                <label>Planned</label>
                            </div>
                            <div class="form-group">
                                <label>Period</label>
                                @Html.DropDownListFor(model => model.NewOutcome.PeriodID,
                                new SelectList(Model.Periods, "PeriodID", "PeriodName"),
                                new { @class = "form-control", style = "display: block; height: 34px;" })
                            </div>
                            <div class="form-group">
                                @Html.CheckBoxFor(model => model.NewOutcome.Payed, new { htmlAttributes = new { @class = "form-control" } })
                                <label>Payed</label>
                            </div>
                            <input type="submit" value="Add outcome" class="btn btn-primary btn-block btn-flat" />
                        </div>
                    </form>
                </div>
            }
        }
    }

