@model HomeFinanse.Areas.Periods.Models.PeriodViewModel

@{ 
    ViewBag.Title = "Add period";
}

<div class="h3 margin-top-20">
    Add period
</div>

@if (ViewData["PeriodAdded"] != null)
{
    <div class="alert-success alert">

        @ViewData["PeriodAdded"]
    </div>
}

@Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

@using (Ajax.BeginForm("AddPeriod", "Period", new { area = "Periods" }, new AjaxOptions { UpdateTargetId = "periodsList", OnComplete= "RefreshPeriods();" }, null))
{
<div class="box box-primary">
    <form role="form">
        <div class="box-body">
            <div class="form-group">
                <label>Period name</label>
                @Html.EditorFor(model => model.NewPeriod.PeriodName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="form-group">
                <label>Period Start Date</label>
                <div class="input-group date" data-provide="datetimepicker">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(model => model.NewPeriod.NullableStartDate, new { @class = "form-control date" })
                </div>
            </div>

            <div class="form-group">
                <label>Period End Date</label>
                <div class="input-group date" data-provide="datetimepicker">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(model => model.NewPeriod.NullableEndDate, new { @class = "form-control date" })
                </div>
            </div>
            <input type="submit" value="Add period" class="btn btn-primary btn-block btn-flat" onclick="RefreshPeriods();" />
        </div>
    </form>
</div>
}